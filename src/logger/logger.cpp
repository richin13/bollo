//
// Created by ricardo on 05/10/15.
//

#include "logger.h"

/**
 * @brief Slot used to send a new logbook event entry to the API server.
 * @param bid The bakery id.
 * @param txt The description of the logbook entry.
 */
void Logger::send_logbook_entry(int bid, QString txt) {
    QNetworkAccessManager* manager = new QNetworkAccessManager(this);

    //Build the url
    QHash<QString, QString> args;
    args["id"] = QString::number(bid);
    args["message"] = txt;

    QUrl url;
    url_builder(url, "reports", "report", args);

    QObject::connect(manager, &QNetworkAccessManager::finished, manager, &QNetworkAccessManager::deleteLater);

    manager->get(QNetworkRequest(url));
}

/**
 * @brief Slot used to send a new logbook problem entry to the API server.
 *  The entries are generated by the baker inspections.
 * @param bid The bakery id.
 * @param txt The description of the logbook problem entry.
 * @param dough Amount of dough affected.
 */
void Logger::send_logbook_problem(int bid, QString txt, int dough) {
    QNetworkAccessManager* manager = new QNetworkAccessManager(this);

    //Build the url
    QHash<QString, QString> args;
    args["id"] = QString::number(bid);
    args["message"] = txt;
    args["dough"] = QString::number(dough);

    QUrl url;
    url_builder(url, "reports", "report", args);

    QObject::connect(manager, &QNetworkAccessManager::finished, manager, &QNetworkAccessManager::deleteLater);

    manager->get(QNetworkRequest(url));
}
